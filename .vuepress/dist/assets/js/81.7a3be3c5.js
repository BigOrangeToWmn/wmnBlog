(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{441:function(t,v,_){"use strict";_.r(v);var a=_(14),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"闭包的概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#闭包的概念"}},[t._v("#")]),t._v(" 闭包的概念")]),t._v(" "),v("p",[t._v("闭包(closure)就是能够读取其他函数内部变量的函数，在本质上闭包是将函数内部和函数外部链接起来的桥梁")]),t._v(" "),v("h2",{attrs:{id:"闭包的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#闭包的优缺点"}},[t._v("#")]),t._v(" 闭包的优缺点")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("优点")]),t._v(" "),v("p",[t._v("保护函数内的变量安全")]),t._v(" "),v("p",[t._v("在内存中维持一个变量")]),t._v(" "),v("p",[t._v("逻辑连续，当闭包作为另一个函数调用的参数时，避免你脱离当前逻辑而单独编写额外逻辑")]),t._v(" "),v("p",[t._v("加强封装性，可以达到对变量的保护作用")])]),t._v(" "),v("li",[v("p",[t._v("缺点")]),t._v(" "),v("p",[t._v("常驻内存，会增大内存使用量，使用不当很容易造成内存泄露")]),t._v(" "),v("p",[t._v("内存浪费问题，对闭包的使用不当会造成无效内存的产生")])]),t._v(" "),v("li",[v("p",[t._v("特性")]),t._v(" "),v("p",[t._v("函数嵌套函数")]),t._v(" "),v("p",[t._v("内部函数可以访问外部函数的变量")]),t._v(" "),v("p",[t._v("参数和变量不会被回收")])])]),t._v(" "),v("h2",{attrs:{id:"闭包的用途"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#闭包的用途"}},[t._v("#")]),t._v(" 闭包的用途")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[t._v("可以读取函数内部的变量\n\n将这些变量的值始终保存在内存中，不会在调用后就被自动清除\n")])])]),v("p",[t._v("创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量。")])])}),[],!1,null,null,null);v.default=s.exports}}]);