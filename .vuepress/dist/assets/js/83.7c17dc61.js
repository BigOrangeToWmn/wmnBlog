(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{443:function(t,v,_){"use strict";_.r(v);var d=_(14),l=Object(d.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("共同点：都可以声明变量")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th"),t._v(" "),v("th",[t._v("var")]),t._v(" "),v("th",[t._v("let")]),t._v(" "),v("th",[t._v("const")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("作用域")]),t._v(" "),v("td",[t._v("函数作用域")]),t._v(" "),v("td",[t._v("块级作用域")]),t._v(" "),v("td",[t._v("块级作用域")])]),t._v(" "),v("tr",[v("td",[t._v("声明提升")]),t._v(" "),v("td",[t._v("能")]),t._v(" "),v("td",[t._v("不能")]),t._v(" "),v("td",[t._v("不能")])]),t._v(" "),v("tr",[v("td",[t._v("重复声明")]),t._v(" "),v("td",[t._v("能")]),t._v(" "),v("td",[t._v("不能")]),t._v(" "),v("td",[t._v("不能")])]),t._v(" "),v("tr",[v("td",[t._v("全局声明式为windows对象的属性")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("不是")]),t._v(" "),v("td",[t._v("不是")])])])]),t._v(" "),v("ol",[v("li",[v("p",[t._v("var：ES6新增了let和const之后要尽量减少使用var(因为let和const声明的变量有更明确的作用域、声明位置以及不变的值)；优先使用const来声明变量，如果知道需要修改的话再使用let")])]),t._v(" "),v("li",[v("p",[t._v("let：不能进行条件式声明；for循环使用let声明迭代变量不会导致迭代变量渗透")])]),t._v(" "),v("li",[v("p",[t._v("const：初始化时直接初始化变量，且不能修改const声明的变量的值")])])])])}),[],!1,null,null,null);v.default=l.exports}}]);