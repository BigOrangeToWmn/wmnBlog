(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{500:function(_,v,t){_.exports=t.p+"assets/img/JS_21.850dd7b8.png"},593:function(_,v,t){"use strict";t.r(v);var s=t(2),r=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[_._v("#")]),_._v(" 三次握手")]),_._v(" "),v("p",[_._v("为了对每次发送的数据进行跟踪与协商，确保数据段的发送和同步接收，根据所接收到的数据量而确认数据发送、接收完毕后何时撤销联系，并建立虚连接。")]),_._v(" "),v("p",[v("img",{attrs:{src:t(500),alt:"Untitled"}})]),_._v(" "),v("p",[_._v("TCP协议位于传输层，作用是提供可靠的字节流服务，为了准确无误地将数据送达目的地，TCP协议采用三次握手策略。")]),_._v(" "),v("p",[_._v("第一次握手：客户端发送一个"),v("strong",[_._v("带有SYN(synchronize)标志的数据包")]),_._v("给服务器")]),_._v(" "),v("p",[_._v("第二次握手：服务端连接成功后，回传一个"),v("strong",[_._v("带有SYN/ACK标志的数据包传递确认信息")]),_._v("，表示我收到了")]),_._v(" "),v("p",[_._v("第三次握手：客户端回传一个"),v("strong",[_._v("带有ACK标志的数据包")]),_._v("，表示我知道了，握手结束")]),_._v(" "),v("p",[_._v("SYN：发起一个新链接  （请求连接标志）")]),_._v(" "),v("p",[_._v("ACK：确认序号有效   （确认报文）")]),_._v(" "),v("p",[_._v("FIN：释放一个连接")]),_._v(" "),v("p",[v("strong",[_._v("TCP为什么是三次握手：")])]),_._v(" "),v("p",[_._v("如果是两次握手，当客户端的SYN请求连接在网络中阻塞，客户端没有接收到ACK报文，就会重新发送SYN。重复发送多次SYN报文，那么服务器在收到请求后就会建立多个荣誉的无效链接，造成资源浪费。")]),_._v(" "),v("h2",{attrs:{id:"四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[_._v("#")]),_._v(" 四次挥手")]),_._v(" "),v("p",[_._v("第一次挥手：客户端发送一个FIN，用来关闭客户端的服务端的数据传送，客户端进入FIN_WAIT_1状态")]),_._v(" "),v("p",[_._v("第二次挥手：服务端收到FIN，发送ACK给客户端，服务端进行CLOSE_WAIT状态")]),_._v(" "),v("p",[_._v("第三次挥手：服务端发送一个FIN，用来关闭服务器端到客户端的数据传送，服务器进去LAST_ACK状态")]),_._v(" "),v("p",[_._v("第四次挥手：客户端收到FIN后，客户端进入TIME_WAIT状态，接着发送一个ACK给Server，服务器进去CLOSED状态，完成四次挥手")]),_._v(" "),v("p",[_._v("FIN_WAIT_1状态：等待远端TCP 的连接终止请求，或者等待之前发送的连接终止请求的确认。")]),_._v(" "),v("p",[_._v("CLOSE_WAIT状态：等待本地用户的连接终止请求。")]),_._v(" "),v("p",[_._v("LAST_ACK状态：1.等待先前发送给远端TCP 的连接终止请求的确认\nCLOSED状态：不在连接状态")]),_._v(" "),v("p",[_._v("四次挥手是因为FIN释放连接报文与ACK确认接受报文分别是由第二次和第三次传输的。")]),_._v(" "),v("p",[_._v("ACK和FIN的触发时机是不同的，服务器在收到FIN报文可以立即发送ACK报文，表明服务器收到了报文，但是服务器想到发送FIN报文需要等到处理完接收缓存区的数据后才可以。")])])}),[],!1,null,null,null);v.default=r.exports}}]);