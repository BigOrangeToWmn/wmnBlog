(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{607:function(e,t,r){"use strict";r.r(t);var o=r(2),v=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"_1-什么是虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是虚拟dom"}},[e._v("#")]),e._v(" "),t("strong",[e._v("1. 什么是虚拟DOM")])]),e._v(" "),t("p",[e._v("通过js创建一个Object对象来模拟真实DOM结构，这个对象包含标签名、属性和子元素对象三个属性，通过vue中的render()函数把虚拟dom编译成真实dom，再通过appendChild()添加到页面中。")]),e._v(" "),t("blockquote",[t("p",[e._v("render函数即渲染函数，render返回的参数是Vnode(虚拟节点，也就是我们要渲染的节点)，createElement是render函数返回的参数，本身也是一个函数。")])]),e._v(" "),t("h2",{attrs:{id:"_2-在vue中如何应用虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在vue中如何应用虚拟dom"}},[e._v("#")]),e._v(" "),t("strong",[e._v("2. 在vue中如何应用虚拟DOM")])]),e._v(" "),t("p",[e._v("在vue实例化中，el固定属性中绑定id，vue源码中render函数渲染虚拟DOM。")]),e._v(" "),t("p",[e._v("通过VNode，vue可以对这个抽象树进行创建节点，删除节点以及修改结点的操作，"),t("strong",[e._v("经过diff算法")]),e._v("得出一些需要修改的最小单元，再更新视图，减少dom操作，提高性能。")]),e._v(" "),t("blockquote",[t("p",[e._v("diff算法是一种对比算法，对比对象的新旧虚拟Dom，可以找到新旧虚拟Dom之间的差异，")])]),e._v(" "),t("h2",{attrs:{id:"_3-为什么需要虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么需要虚拟dom"}},[e._v("#")]),e._v(" 3. "),t("strong",[e._v("为什么需要虚拟DOM")])]),e._v(" "),t("p",[e._v("DOM是很慢的，其元素非常庞大，页面的性能问题，大部分都是由DOM操作引起的。操作DOM的代码人就很昂贵，频繁操作还是会出现页面卡顿，影响用户的体验。")])])}),[],!1,null,null,null);t.default=v.exports}}]);